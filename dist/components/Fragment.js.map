{"version":3,"sources":["../../src/components/Fragment.js"],"names":["Fragment","props","state","context","store","router","handleChange","bind","subscribe","visible","id","current","getState","slice","immutable","routerStore","idPath","getIn","match","indexOf","setState","children","ChildComponent","component","count","only","contextTypes","object","propTypes","oneOfType","string","number","array","childContextTypes","shape","bool","routes","isRequired"],"mappings":"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","file":"Fragment.js","sourcesContent":["import React, { Children, Component, PropTypes } from 'react';\n\nclass Fragment extends Component {\n\n    constructor(props, state) {\n\n        super(props, state);\n\n        const { store, router } = this.context;\n\n        this.store = store;\n        this.router = router;\n        this.handleChange = this.handleChange.bind(this);\n\n        store.subscribe(this.handleChange);\n\n        this.state = {\n            visible: false\n        };\n    }\n\n    getChildContext() {\n\n        let { router } = this.context;\n\n        const { id } = this.props;\n        const current = `${router.current}:${id}`;\n\n        router = { current, ...router };\n\n        return { router };\n    }\n\n    handleChange() {\n\n        const state = this.store.getState();\n        const { slice = 'router', current, immutable } = this.router;\n        const routerStore = state[slice];\n\n        if (routerStore) {\n            const idPath = immutable ? routerStore.getIn([ 'router', 'idPath' ]) : routerStore.router.idPath;\n            const match = (`${idPath}:`).indexOf(`${current}:`);\n\n            if (match === 0 && !this.state.visible) {\n                this.setState({\n                    visible: true\n                });\n            } else if (this.state.visible) {\n                this.setState({\n                    visible: false\n                });\n            }\n        }\n\n    }\n\n    render() {\n\n        const { visible } = this.state;\n        const { children, component: ChildComponent} = this.props;\n\n        if (!visible) return null; // eslint-disable-line\n        if (ChildComponent) return <ChildComponent />; // eslint-disable-line\n        if (children) return Children.count(children) === 1 ? Children.only(children) : <div>{children}</div>; // eslint-disable-line\n    }\n}\n\nFragment.contextTypes = {\n    router: PropTypes.object,\n    store: PropTypes.object\n};\n\nFragment.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array\n    ]),\n    component: PropTypes.object\n};\n\nFragment.childContextTypes = {\n    router: PropTypes.shape({\n        slice: PropTypes.string,\n        immutable: PropTypes.bool,\n        routes: PropTypes.array\n    }).isRequired,\n    store: PropTypes.object\n};\n\nexport default Fragment;\n"]}