{"version":3,"sources":["../../src/parsers/locationToState.js"],"names":["parseLocation","query","location","search","state","path","pathname","route","locationToRoute","createLocationToStateParser","routes"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB;AAAA,WAAmB,oBAAY;AACjD,YAAMC,QAAQ,wBAAQC,SAASC,MAAjB,CAAd;AACA,YAAMC,QAAQF,SAASE,KAAT,IAAkB,EAAhC;AACA,YAAMC,OAAOH,SAASI,QAAT,GAAoBJ,SAASC,MAA1C;AACA,YAAMI,QAAQC,gBAAgBH,IAAhB,CAAd;;AAEA,4BACOH,QADP;AAEID,wBAFJ;AAGIG,wBAHJ;AAIIC,sBAJJ;AAKIE;AALJ;AAOH,KAbqB;AAAA,CAAtB;;AAeA,IAAME,8BAA8B,SAA9BA,2BAA8B,SAAU;AAC1C,QAAMD,kBAAkB,+BAA4BE,MAA5B,CAAxB;AACA,WAAOV,cAAcQ,eAAd,CAAP;AACH,CAHD;;kBAKeC,2B","file":"locationToState.js","sourcesContent":["import { parse as qsParse } from 'query-string';\nimport createLocationToRouteParser from './locationToRoute';\n\nconst parseLocation = locationToRoute => location => {\n    const query = qsParse(location.search);\n    const state = location.state || {};\n    const path = location.pathname + location.search;\n    const route = locationToRoute(path);\n\n    return {\n        ...location,\n        query,\n        state,\n        path,\n        route\n    };\n};\n\nconst createLocationToStateParser = routes => {\n    const locationToRoute = createLocationToRouteParser(routes);\n    return parseLocation(locationToRoute);\n};\n\nexport default createLocationToStateParser;"]}